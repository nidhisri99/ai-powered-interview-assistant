{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport {Slot} from \"@radix-ui/react-slot\"\r\nimport {cva, type VariantProps} from \"class-variance-authority\"\r\n\r\nimport {cn} from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n    {\r\n        variants: {\r\n            variant: {\r\n                default:\r\n                    \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n                destructive:\r\n                    \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n                outline:\r\n                    \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n                secondary:\r\n                    \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n                ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n                link: \"text-primary underline-offset-4 hover:underline\",\r\n            },\r\n            size: {\r\n                default: \"h-9 px-4 py-2\",\r\n                xs: \"h-6 rounded-md px-3 text-xs\",\r\n                sm: \"h-8 rounded-md px-3 text-xs\",\r\n                lg: \"h-10 rounded-md px-8\",\r\n                xl: \"h-12 rounded-lg px-10\",\r\n                icon: \"h-9 w-9\",\r\n            },\r\n        },\r\n        defaultVariants: {\r\n            variant: \"default\",\r\n            size: \"default\",\r\n        },\r\n    }\r\n)\r\n\r\nexport interface ButtonProps\r\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n        VariantProps<typeof buttonVariants> {\r\n    asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n    ({className, variant, size, asChild = false, ...props}, ref) => {\r\n        const Comp = asChild ? Slot : \"button\"\r\n        return (\r\n            <Comp\r\n                className={cn(buttonVariants({variant, size, className}))}\r\n                ref={ref}\r\n                {...props}\r\n            />\r\n        )\r\n    }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport {Button, buttonVariants}\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACrB,ySACA;IACI,UAAU;QACN,SAAS;YACL,SACI;YACJ,aACI;YACJ,SACI;YACJ,WACI;YACJ,OAAO;YACP,MAAM;QACV;QACA,MAAM;YACF,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACV;IACJ;IACA,iBAAiB;QACb,SAAS;QACT,MAAM;IACV;AACJ;AASJ,MAAM,uBAAS,sMAAM,UAAU,CAC3B,CAAC,EAAC,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAM,EAAE;IACpD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACI,8OAAC;QACG,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAC;YAAS;YAAM;QAAS;QACtD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ConvAI.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {Button} from \"@/components/ui/button\";\r\nimport * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {Card, CardContent, CardHeader, CardTitle} from \"@/components/ui/card\";\r\nimport {Conversation} from \"@11labs/client\";\r\nimport {cn} from \"@/lib/utils\";\r\n\r\nasync function requestMicrophonePermission() {\r\n    try {\r\n        await navigator.mediaDevices.getUserMedia({audio: true})\r\n        return true\r\n    } catch {\r\n        console.error('Microphone permission denied')\r\n        return false\r\n    }\r\n}\r\n\r\nasync function getSignedUrl(): Promise<string> {\r\n    const response = await fetch('/api/signed-url')\r\n    if (!response.ok) {\r\n        throw Error('Failed to get signed url')\r\n    }\r\n    const data = await response.json()\r\n    return data.signedUrl\r\n}\r\n\r\nexport function ConvAI() {\r\n    const [conversation, setConversation] = useState<Conversation | null>(null)\r\n    const [isConnected, setIsConnected] = useState(false)\r\n    const [isSpeaking, setIsSpeaking] = useState(false)\r\n\r\n    async function startConversation() {\r\n        const hasPermission = await requestMicrophonePermission()\r\n        if (!hasPermission) {\r\n            alert(\"No permission\")\r\n            return;\r\n        }\r\n        const signedUrl = await getSignedUrl()\r\n        const conversation = await Conversation.startSession({\r\n            signedUrl: signedUrl,\r\n            onConnect: () => {\r\n                setIsConnected(true)\r\n                setIsSpeaking(true)\r\n            },\r\n            onDisconnect: () => {\r\n                setIsConnected(false)\r\n                setIsSpeaking(false)\r\n            },\r\n            onError: (error) => {\r\n                console.log(error)\r\n                alert('An error occurred during the conversation')\r\n            },\r\n            onModeChange: ({mode}) => {\r\n                setIsSpeaking(mode === 'speaking')\r\n            },\r\n        })\r\n        setConversation(conversation)\r\n    }\r\n\r\n    async function endConversation() {\r\n        if (!conversation) {\r\n            return\r\n        }\r\n        await conversation.endSession()\r\n        setConversation(null)\r\n    }\r\n\r\n    return (\r\n        <div className={\"flex justify-center items-center gap-x-4\"}>\r\n            <Card className={'rounded-3xl'}>\r\n                <CardContent>\r\n                    <CardHeader>\r\n                        <CardTitle className={'text-center'}>\r\n                            {isConnected ? (\r\n                                isSpeaking ? `Agent is speaking` : 'Agent is listening'\r\n                            ) : (\r\n                                'Disconnected'\r\n                            )}\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <div className={'flex flex-col gap-y-4 text-center'}>\r\n                        <div className={cn('orb my-16 mx-12',\r\n                            isSpeaking ? 'animate-orb' : (conversation && 'animate-orb-slow'),\r\n                            isConnected ? 'orb-active' : 'orb-inactive')}\r\n                        ></div>\r\n\r\n\r\n                        <Button\r\n                            variant={'outline'}\r\n                            className={'rounded-full'}\r\n                            size={\"lg\"}\r\n                            disabled={conversation !== null && isConnected}\r\n                            onClick={startConversation}\r\n                        >\r\n                            Start conversation\r\n                        </Button>\r\n                        <Button\r\n                            variant={'outline'}\r\n                            className={'rounded-full'}\r\n                            size={\"lg\"}\r\n                            disabled={conversation === null && !isConnected}\r\n                            onClick={endConversation}\r\n                        >\r\n                            End conversation\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AAPA;;;;;;;AASA,eAAe;IACX,IAAI;QACA,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;YAAC,OAAO;QAAI;QACtD,OAAO;IACX,EAAE,OAAM;QACJ,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;AACJ;AAEA,eAAe;IACX,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QACd,MAAM,MAAM;IAChB;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,SAAS;AACzB;AAEO,SAAS;IACZ,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IACtE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,eAAe;QACX,MAAM,gBAAgB,MAAM;QAC5B,IAAI,CAAC,eAAe;YAChB,MAAM;YACN;QACJ;QACA,MAAM,YAAY,MAAM;QACxB,MAAM,eAAe,MAAM,2JAAA,CAAA,eAAY,CAAC,YAAY,CAAC;YACjD,WAAW;YACX,WAAW;gBACP,eAAe;gBACf,cAAc;YAClB;YACA,cAAc;gBACV,eAAe;gBACf,cAAc;YAClB;YACA,SAAS,CAAC;gBACN,QAAQ,GAAG,CAAC;gBACZ,MAAM;YACV;YACA,cAAc,CAAC,EAAC,IAAI,EAAC;gBACjB,cAAc,SAAS;YAC3B;QACJ;QACA,gBAAgB;IACpB;IAEA,eAAe;QACX,IAAI,CAAC,cAAc;YACf;QACJ;QACA,MAAM,aAAa,UAAU;QAC7B,gBAAgB;IACpB;IAEA,qBACI,8OAAC;QAAI,WAAW;kBACZ,cAAA,8OAAC,yHAAA,CAAA,OAAI;YAAC,WAAW;sBACb,cAAA,8OAAC,yHAAA,CAAA,cAAW;;kCACR,8OAAC,yHAAA,CAAA,aAAU;kCACP,cAAA,8OAAC,yHAAA,CAAA,YAAS;4BAAC,WAAW;sCACjB,cACG,aAAa,CAAC,iBAAiB,CAAC,GAAG,uBAEnC;;;;;;;;;;;kCAIZ,8OAAC;wBAAI,WAAW;;0CACZ,8OAAC;gCAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBACf,aAAa,gBAAiB,gBAAgB,oBAC9C,cAAc,eAAe;;;;;;0CAIjC,8OAAC,2HAAA,CAAA,SAAM;gCACH,SAAS;gCACT,WAAW;gCACX,MAAM;gCACN,UAAU,iBAAiB,QAAQ;gCACnC,SAAS;0CACZ;;;;;;0CAGD,8OAAC,2HAAA,CAAA,SAAM;gCACH,SAAS;gCACT,WAAW;gCACX,MAAM;gCACN,UAAU,iBAAiB,QAAQ,CAAC;gCACpC,SAAS;0CACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzB"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}